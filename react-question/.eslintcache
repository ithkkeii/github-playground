[{"/home/kei/data/project/playground/react-question/src/reportWebVitals.ts":"1","/home/kei/data/project/playground/react-question/src/lesson/previous-state/PreviousState.tsx":"2","/home/kei/data/project/playground/react-question/src/App.tsx":"3","/home/kei/data/project/playground/react-question/src/lesson/stale-callback/StaleCallback.tsx":"4","/home/kei/data/project/playground/react-question/src/lesson/stale-callback/StaleCallbackFix.tsx":"5"},{"size":425,"mtime":1611751743671,"results":"6","hashOfConfig":"7"},{"size":1070,"mtime":1611931434092,"results":"8","hashOfConfig":"9"},{"size":861,"mtime":1611844353162,"results":"10","hashOfConfig":"9"},{"size":1592,"mtime":1611848269860,"results":"11","hashOfConfig":"9"},{"size":1291,"mtime":1611848261692,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jnj2k0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"70s0hf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kei/data/project/playground/react-question/src/reportWebVitals.ts",[],"/home/kei/data/project/playground/react-question/src/lesson/previous-state/PreviousState.tsx",["23"],"/home/kei/data/project/playground/react-question/src/App.tsx",[],"/home/kei/data/project/playground/react-question/src/lesson/stale-callback/StaleCallback.tsx",["24","25"],"/home/kei/data/project/playground/react-question/src/lesson/stale-callback/StaleCallbackFix.tsx",["26","27"],{"ruleId":"28","severity":1,"message":"29","line":22,"column":25,"nodeType":"30","endLine":22,"endColumn":29},{"ruleId":"31","severity":1,"message":"32","line":1,"column":30,"nodeType":"33","messageId":"34","endLine":1,"endColumn":39},{"ruleId":"28","severity":1,"message":"35","line":14,"column":6,"nodeType":"36","endLine":14,"endColumn":8,"suggestions":"37"},{"ruleId":"31","severity":1,"message":"38","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":28},{"ruleId":"31","severity":1,"message":"39","line":1,"column":53,"nodeType":"33","messageId":"34","endLine":1,"endColumn":61},"react-hooks/exhaustive-deps","Assignments to the 'isTriggerReturn' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'counter'. Either include it or remove the dependency array. You can also do a functional update 'setCounter(c => ...)' if you only need 'counter' in the 'setCounter' call.","ArrayExpression",["40"],"'useCallback' is defined but never used.","'useState' is defined but never used.",{"desc":"41","fix":"42"},"Update the dependencies array to be: [counter]",{"range":"43","text":"44"},[555,557],"[counter]"]